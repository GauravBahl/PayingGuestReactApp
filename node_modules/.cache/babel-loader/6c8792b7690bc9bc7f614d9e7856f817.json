{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getContainerUtilityClass } from './containerClasses';\nimport capitalize from '../utils/capitalize';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(styles.root || {}, _extends({}, styles[`maxWidth${capitalize(String(styleProps.maxWidth))}`], styleProps.fixed && styles.fixed, styleProps.disableGutters && styles.disableGutters));\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses({\n    slots,\n    classes,\n    getUtilityClass: getContainerUtilityClass\n  });\n};\n\nconst ContainerRoot = experimentalStyled('div', {}, {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  width: '100%',\n  marginLeft: 'auto',\n  boxSizing: 'border-box',\n  marginRight: 'auto',\n  display: 'block'\n}, !styleProps.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}), ({\n  theme,\n  styleProps\n}) => styleProps.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n  const value = theme.breakpoints.values[breakpoint];\n\n  if (value !== 0) {\n    acc[theme.breakpoints.up(breakpoint)] = {\n      maxWidth: `${value}${theme.breakpoints.unit}`\n    };\n  }\n\n  return acc;\n}, {}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.maxWidth === 'xs' && {\n  [theme.breakpoints.up('xs')]: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n  }\n}, styleProps.maxWidth !== 'xs' && {\n  [theme.breakpoints.up(styleProps.maxWidth)]: {\n    maxWidth: `${theme.breakpoints.values[styleProps.maxWidth]}${theme.breakpoints.unit}`\n  }\n}));\nconst Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  });\n\n  const {\n    className,\n    component: Component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  const styleProps = _extends({}, props, {\n    disableGutters,\n    fixed,\n    maxWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(ContainerRoot, _extends({\n    as: Component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Container;","map":{"version":3,"sources":["/home/gaurav/Documents/Study2021/airbnb-clone/node_modules/@material-ui/core/Container/Container.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","useThemeProps","experimentalStyled","getContainerUtilityClass","capitalize","overridesResolver","props","styles","styleProps","root","String","maxWidth","fixed","disableGutters","useUtilityClasses","classes","slots","getUtilityClass","ContainerRoot","name","slot","theme","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","unit","Math","max","xs","Container","forwardRef","inProps","ref","className","component","Component","other","createElement","as","process","env","NODE_ENV","propTypes","children","node","object","string","elementType","bool","oneOf","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getContainerUtilityClass } from './containerClasses';\nimport capitalize from '../utils/capitalize';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(styles.root || {}, _extends({}, styles[`maxWidth${capitalize(String(styleProps.maxWidth))}`], styleProps.fixed && styles.fixed, styleProps.disableGutters && styles.disableGutters));\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses({\n    slots,\n    classes,\n    getUtilityClass: getContainerUtilityClass\n  });\n};\n\nconst ContainerRoot = experimentalStyled('div', {}, {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  width: '100%',\n  marginLeft: 'auto',\n  boxSizing: 'border-box',\n  marginRight: 'auto',\n  display: 'block'\n}, !styleProps.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}), ({\n  theme,\n  styleProps\n}) => styleProps.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n  const value = theme.breakpoints.values[breakpoint];\n\n  if (value !== 0) {\n    acc[theme.breakpoints.up(breakpoint)] = {\n      maxWidth: `${value}${theme.breakpoints.unit}`\n    };\n  }\n\n  return acc;\n}, {}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.maxWidth === 'xs' && {\n  [theme.breakpoints.up('xs')]: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n  }\n}, styleProps.maxWidth !== 'xs' && {\n  [theme.breakpoints.up(styleProps.maxWidth)]: {\n    maxWidth: `${theme.breakpoints.values[styleProps.maxWidth]}${theme.breakpoints.unit}`\n  }\n}));\nconst Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  });\n\n  const {\n    className,\n    component: Component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  const styleProps = _extends({}, props, {\n    disableGutters,\n    fixed,\n    maxWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(ContainerRoot, _extends({\n    as: Component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Container;"]},"metadata":{},"sourceType":"module"}