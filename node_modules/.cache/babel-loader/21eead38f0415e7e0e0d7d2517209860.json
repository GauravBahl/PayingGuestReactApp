{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport sliderUnstyledClasses from './sliderUnstyledClasses';\n\nconst useValueLabelClasses = props => {\n  const {\n    open\n  } = props;\n  const utilityClasses = {\n    offset: clsx(sliderUnstyledClasses.valueLabel, sliderUnstyledClasses.valueLabelOffset, open && sliderUnstyledClasses.valueLabelOpen),\n    circle: sliderUnstyledClasses.valueLabelCircle,\n    label: sliderUnstyledClasses.valueLabelLabel\n  };\n  return utilityClasses;\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction SliderValueLabelUnstyled(props) {\n  const {\n    children,\n    className,\n    value,\n    components = {},\n    theme\n  } = props;\n  const classes = useValueLabelClasses(props);\n  const Root = components.Root || 'span';\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: clsx(children.props.className)\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, children.props.children, /*#__PURE__*/React.createElement(Root, {\n    className: clsx(classes.offset, className),\n    theme: theme,\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.circle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, value)))));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SliderValueLabelUnstyled.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n  theme: PropTypes.any,\n  value: PropTypes.node\n} : void 0;\nexport default SliderValueLabelUnstyled;","map":{"version":3,"sources":["/home/gaurav/Documents/Study2021/airbnb-clone/node_modules/@material-ui/unstyled/SliderUnstyled/SliderValueLabelUnstyled.js"],"names":["React","PropTypes","clsx","sliderUnstyledClasses","useValueLabelClasses","props","open","utilityClasses","offset","valueLabel","valueLabelOffset","valueLabelOpen","circle","valueLabelCircle","label","valueLabelLabel","SliderValueLabelUnstyled","children","className","value","components","theme","classes","Root","cloneElement","createElement","Fragment","process","env","NODE_ENV","propTypes","element","isRequired","string","shape","elementType","any","node"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpC,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAGA,QAAME,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAEN,IAAI,CAACC,qBAAqB,CAACM,UAAvB,EAAmCN,qBAAqB,CAACO,gBAAzD,EAA2EJ,IAAI,IAAIH,qBAAqB,CAACQ,cAAzG,CADS;AAErBC,IAAAA,MAAM,EAAET,qBAAqB,CAACU,gBAFT;AAGrBC,IAAAA,KAAK,EAAEX,qBAAqB,CAACY;AAHR,GAAvB;AAKA,SAAOR,cAAP;AACD,CAVD;AAWA;AACA;AACA;;;AAGA,SAASS,wBAAT,CAAkCX,KAAlC,EAAyC;AACvC,QAAM;AACJY,IAAAA,QADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,UAAU,GAAG,EAJT;AAKJC,IAAAA;AALI,MAMFhB,KANJ;AAOA,QAAMiB,OAAO,GAAGlB,oBAAoB,CAACC,KAAD,CAApC;AACA,QAAMkB,IAAI,GAAGH,UAAU,CAACG,IAAX,IAAmB,MAAhC;AACA,SAAO,aAAavB,KAAK,CAACwB,YAAN,CAAmBP,QAAnB,EAA6B;AAC/CC,IAAAA,SAAS,EAAEhB,IAAI,CAACe,QAAQ,CAACZ,KAAT,CAAea,SAAhB;AADgC,GAA7B,EAEjB,aAAalB,KAAK,CAACyB,aAAN,CAAoBzB,KAAK,CAAC0B,QAA1B,EAAoC,IAApC,EAA0CT,QAAQ,CAACZ,KAAT,CAAeY,QAAzD,EAAmE,aAAajB,KAAK,CAACyB,aAAN,CAAoBF,IAApB,EAA0B;AACxHL,IAAAA,SAAS,EAAEhB,IAAI,CAACoB,OAAO,CAACd,MAAT,EAAiBU,SAAjB,CADyG;AAExHG,IAAAA,KAAK,EAAEA,KAFiH;AAGxH,mBAAe;AAHyG,GAA1B,EAI7F,aAAarB,KAAK,CAACyB,aAAN,CAAoB,MAApB,EAA4B;AAC1CP,IAAAA,SAAS,EAAEI,OAAO,CAACV;AADuB,GAA5B,EAEb,aAAaZ,KAAK,CAACyB,aAAN,CAAoB,MAApB,EAA4B;AAC1CP,IAAAA,SAAS,EAAEI,OAAO,CAACR;AADuB,GAA5B,EAEbK,KAFa,CAFA,CAJgF,CAAhF,CAFI,CAApB;AAWD;;AAEDQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,wBAAwB,CAACc,SAAzB,GAAqC;AAC3Eb,EAAAA,QAAQ,EAAEhB,SAAS,CAAC8B,OAAV,CAAkBC,UAD+C;AAE3Ed,EAAAA,SAAS,EAAEjB,SAAS,CAACgC,MAFsD;AAG3Eb,EAAAA,UAAU,EAAEnB,SAAS,CAACiC,KAAV,CAAgB;AAC1BX,IAAAA,IAAI,EAAEtB,SAAS,CAACkC;AADU,GAAhB,CAH+D;AAM3Ed,EAAAA,KAAK,EAAEpB,SAAS,CAACmC,GAN0D;AAO3EjB,EAAAA,KAAK,EAAElB,SAAS,CAACoC;AAP0D,CAA7E,GAQI,KAAK,CART;AASA,eAAerB,wBAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport sliderUnstyledClasses from './sliderUnstyledClasses';\n\nconst useValueLabelClasses = props => {\n  const {\n    open\n  } = props;\n  const utilityClasses = {\n    offset: clsx(sliderUnstyledClasses.valueLabel, sliderUnstyledClasses.valueLabelOffset, open && sliderUnstyledClasses.valueLabelOpen),\n    circle: sliderUnstyledClasses.valueLabelCircle,\n    label: sliderUnstyledClasses.valueLabelLabel\n  };\n  return utilityClasses;\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction SliderValueLabelUnstyled(props) {\n  const {\n    children,\n    className,\n    value,\n    components = {},\n    theme\n  } = props;\n  const classes = useValueLabelClasses(props);\n  const Root = components.Root || 'span';\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: clsx(children.props.className)\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, children.props.children, /*#__PURE__*/React.createElement(Root, {\n    className: clsx(classes.offset, className),\n    theme: theme,\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.circle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, value)))));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SliderValueLabelUnstyled.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n  theme: PropTypes.any,\n  value: PropTypes.node\n} : void 0;\nexport default SliderValueLabelUnstyled;"]},"metadata":{},"sourceType":"module"}